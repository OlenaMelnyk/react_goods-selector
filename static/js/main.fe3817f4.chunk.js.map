{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","defaultSelectedGoods","App","state","selectedGoods","selectGood","event","sibling","target","classList","toggle","setState","prevState","goods","foundIndex","indexOf","textContent","splice","push","validateClearSelectionState","clearSelection","style","visibility","this","selectedCount","length","firstPart","slice","join","document","querySelector","title","getSelectedGoodsList","className","type","id","onClick","map","index","key","classNames","active","includes","data-bs-toggle","previousSibling","React","Component","ReactDOM","render","getElementById"],"mappings":"uPAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,CAAC,OA6GfC,E,4MA1GbC,MAAQ,CACNC,cAAeH,G,EAoBjBI,WAAa,SAACC,EAAOC,GACnBD,EAAME,OAAOC,UAAUC,OAAO,UAE9B,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAQD,EAAUR,cAClBU,EAAaD,EAAME,QAAQR,EAAQS,aAUzC,OARoB,IAAhBF,EACFD,EAAMI,OAAOH,EAAY,GAEzBD,EAAMK,KAAKX,EAAQS,aAGrB,EAAKG,8BAEG,CACNf,cAAeS,O,EAKrBO,eAAiB,SAACd,GAChB,EAAKK,SAAS,CACZP,cAAe,KAGjBE,EAAME,OAAOa,MAAMC,WAAa,U,0DA3ClC,WACE,IAAMT,EAAQU,KAAKpB,MAAMC,cACnBoB,EAAgBX,EAAMY,OAE5B,GAAsB,IAAlBD,EACF,MAAM,GAAN,OAAUX,EAAM,GAAhB,gBAGF,GAAIW,EAAgB,EAAG,CACrB,IAAME,EAAYb,EAAMc,MAAM,GAAI,GAAGC,KAAK,MAE1C,MAAM,GAAN,OAAUF,EAAV,gBAA2Bb,EAAMW,EAAgB,GAAjD,iBAGF,MAAO,sB,yCAiCT,WACsBK,SAASC,cAAc,iBAE/BT,MAAMC,WAAcC,KAAKpB,MAAMC,cAAcqB,OAAS,EAC9D,UACA,W,oBAGN,WAAU,IAAD,OACCrB,EAAkBmB,KAAKpB,MAAvBC,cACF2B,EAAQR,KAAKS,uBAEnB,OACE,yBAAKC,UAAU,sBACb,wBAAIA,UAAU,oBAAoBF,GAClC,4BACEG,KAAK,SACLC,GAAG,eACHF,UAAU,iDACVG,QAASb,KAAKH,gBAJhB,KAQA,wBAAIa,UAAU,+BACXjC,EAAgBqC,KAAI,SAACxB,EAAOyB,GAAR,OACnB,yBAAKC,IAAG,cAASD,IACf,wBAAIL,UAAU,2CACXpB,EACD,4BACEqB,KAAK,SACLD,UACEO,IACE,kDACA,CAAEC,OAAQrC,EAAcsC,SAAS7B,KAGrC8B,iBAAe,SACfP,QACE,SAAC9B,GACC,EAAKD,WAAWC,EAAOA,EAAME,OAAOoC,mBAIvCxC,EAAcsC,SAAS7B,GAAS,SAAW,kB,GA/F5CgC,IAAMC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAnB,SAASoB,eAAe,U","file":"static/js/main.fe3817f4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst defaultSelectedGoods = ['Jam'];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: defaultSelectedGoods,\n  };\n\n  getSelectedGoodsList() {\n    const goods = this.state.selectedGoods;\n    const selectedCount = goods.length;\n\n    if (selectedCount === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    if (selectedCount > 1) {\n      const firstPart = goods.slice(0, -1).join(', ');\n\n      return `${firstPart} and ${goods[selectedCount - 1]} are selected`;\n    }\n\n    return 'No goods selected';\n  }\n\n  selectGood = (event, sibling) => {\n    event.target.classList.toggle('active');\n\n    this.setState((prevState) => {\n      const goods = prevState.selectedGoods;\n      const foundIndex = goods.indexOf(sibling.textContent);\n\n      if (foundIndex !== -1) {\n        goods.splice(foundIndex, 1);\n      } else {\n        goods.push(sibling.textContent);\n      }\n\n      this.validateClearSelectionState();\n\n      return ({\n        selectedGoods: goods,\n      });\n    });\n  };\n\n  clearSelection = (event) => {\n    this.setState({\n      selectedGoods: [],\n    });\n    /* eslint-disable no-param-reassign */\n    event.target.style.visibility = 'hidden';\n    /* eslint-enable no-param-reassign */\n  };\n\n  validateClearSelectionState() {\n    const clearButton = document.querySelector('#clear-button');\n\n    clearButton.style.visibility = (this.state.selectedGoods.length > 0)\n      ? 'visible'\n      : 'hidden';\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    const title = this.getSelectedGoodsList();\n\n    return (\n      <div className=\"container centered\">\n        <h1 className=\"container__title\">{title}</h1>\n        <button\n          type=\"button\"\n          id=\"clear-button\"\n          className=\"btn btn-outline-danger container__clear-button\"\n          onClick={this.clearSelection}\n        >\n          X\n        </button>\n        <ul className=\"list-group list-group-flush\">\n          {goodsFromServer.map((goods, index) => (\n            <div key={`div-${index}`}>\n              <li className=\"list-group-item list-group-item--padded\">\n                {goods}\n                <button\n                  type=\"button\"\n                  className={\n                    classNames(\n                      'btn btn-outline-warning list-group-item__button',\n                      { active: selectedGoods.includes(goods) },\n                    )\n                  }\n                  data-bs-toggle=\"button\"\n                  onClick={\n                    (event) => {\n                      this.selectGood(event, event.target.previousSibling);\n                    }\n                  }\n                >\n                  {selectedGoods.includes(goods) ? 'Remove' : 'Add'}\n                </button>\n              </li>\n\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}